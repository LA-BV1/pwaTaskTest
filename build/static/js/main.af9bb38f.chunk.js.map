{"version":3,"sources":["services/Api/base.js","services/Api/categories.js","services/Api/merchants.js","services/Api/users.js","services/Api/index.js","util/navbarStyle.js","layout/MainNavbar.js","layout/OtherNavbar.js","components/navbar/Navbar.js","util/categoriesStyle.js","components/categories/Categories.js","App.js","util/merchantsStyle.js","layout/SearchInput.js","components/merchants/Merchants.js","serviceWorker.js","index.js"],"names":["BaseApiService","Object","classCallCheck","this","baseURL","server","axios","create","headers","Content-Type","method","_ref","url","params","request","then","response","data","catch","handleError","error","console","log","CategoriesApiService","_BaseApiService","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","MerchantsApiService","UsersApiService","Api","ApiService","categories","merchants","users","navbarStyle","navBar","height","backgroundColor","list","width","toggleButton","paddingTop","paddingBottom","paddingLeft","color","toggleButtonNotMain","toggleButtonNotMainLabel","bigAvatar","defineProperty","margin","border","position","top","img","userName","fontWeight","textAlign","marginTop","listIcon","useStyles","makeStyles","MainNavbar","props","classes","_useState","useState","left","_useState2","slicedToArray","state","setState","pages","label","link","toggleDrawer","side","open","event","type","objectSpread","sideList","withRouter","history","react_default","a","createElement","className","role","onClick","onKeyDown","List","map","el","index","ListItem","button","push","ListItemIcon","Home_default","AttachMoney_default","ListItemText","primary","Fragment","Button","Menu_default","Drawer","onClose","Avatar","alt","src","userImage","root","returnLink","KeyboardArrowLeft_default","setUsers","useEffect","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","getUsers","sent","stop","fetchUsers","style","react_loader_spinner_default","window","location","pathname","layout_MainNavbar","image","name","layout_OtherNavbar","categoriesStyle","menuList","display","listItem","borderTop","borderBottom","fontSize","paddingRight","listItemText","listArrow","right","cardGrid","cardPaper","padding","setCategories","_useState3","_useState4","setMerchants","fetchMerchants","fetchCategories","timer1","setInterval","timer2","clearInterval","_ref2","getMerchants","length","_ref3","_callee2","_context2","getCategories","chooseIcon","id","Fastfood_default","Spa_default","DeveloperBoard_default","Folder_default","MenuList","MenuItem","title","KeyboardArrowRight_default","Grid","container","item","sm","md","Paper","App","navigator","addEventListener","serviceWorker","register","categories_Categories","merchantsStyle","card","maxWidth","marginBottom","media","backgroundSize","cardContainer","justifyContent","flexWrap","search","borderRadius","fade","&:hover","searchIcon","recordIcon","inputRoot","inputInput","SpeechRecognition","webkitSpeechRecognition","recognition","undefined","SearchInput","recording","setRecording","setSearch","start","onresult","speechToText","results","transcript","getValue","InputBase","placeholder","startAdornment","InputAdornment","IconButton","aria-label","Search_default","endAdornment","FiberManualRecord_default","Mic_default","input","onChange","e","target","Merchants","allMerchants","setAllMerchants","fetchAllMerchants","timer","filter","categoryId","layout_SearchInput","toLowerCase","includes","Card","CardActionArea","CardMedia","CardContent","Typography","gutterBottom","variant","component","description","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","supportsHistory","bounceTransition","atEnter","opacity","offset","atLeave","atActive","ReactDOM","render","react_router_dom","forceRefresh","navbar_Navbar","es","mapStyles","styles","transform","concat","react_router","exact","path","document","getElementById","URL","process","href","origin","fetch","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.af9bb38f.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nclass BaseApiService {\r\n    constructor() {\r\n        this.baseURL = 'https://my-json-server.typicode.com/lazicmladen/PWATrainingFakeServer';\r\n        this.server = axios.create({\r\n            baseURL: this.baseURL,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n    }\r\n\r\n    request({ method, url, params }) {\r\n        return this.server\r\n            .request({\r\n                method,\r\n                url,\r\n                params\r\n            })\r\n            .then(response => response.data)\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    handleError(error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport default BaseApiService;\r\n","import BaseApiService from './base';\r\n\r\nexport class CategoriesApiService extends BaseApiService {\r\n    \r\n    getCategories() {\r\n        return this.request({\r\n            method: 'get',\r\n            url: '/categories'\r\n        })\r\n    }\r\n\r\n}","import BaseApiService from './base';\r\n\r\nexport class MerchantsApiService extends BaseApiService {\r\n\r\n    getMerchants() {\r\n        return this.request({\r\n            method: 'get',\r\n            url: '/mercants'\r\n        })\r\n    }\r\n\r\n}","import BaseApiService from './base';\r\n\r\nexport class UsersApiService extends BaseApiService {\r\n\r\n    getUsers() {\r\n        return this.request({\r\n            method: 'get',\r\n            url: '/users'\r\n        })\r\n    }\r\n\r\n}","import { CategoriesApiService } from './categories';\r\nimport { MerchantsApiService } from './merchants';\r\nimport { UsersApiService } from './users';\r\n\r\nclass ApiService {\r\n    constructor() {\r\n        this.categories = new CategoriesApiService();\r\n        this.merchants = new MerchantsApiService();\r\n        this.users = new UsersApiService();\r\n    }\r\n}\r\n\r\nexport const Api = new ApiService();","export default {\r\n    navBar: {\r\n        height: '35px',\r\n        backgroundColor: '#95DBC8'\r\n    },\r\n    list: {\r\n        width: 250,\r\n    },\r\n    toggleButton: {\r\n        paddingTop: '0px',\r\n        paddingBottom: '0px',\r\n        paddingLeft: '0px',\r\n        height: '35px',\r\n        color: 'white',\r\n    },\r\n    toggleButtonNotMain: {\r\n        paddingTop: '0px',\r\n        paddingBottom: '0px',\r\n        paddingLeft: '0px',\r\n        height: '35px',\r\n        color: 'white',\r\n        // justifyContent: 'unset'\r\n    },\r\n    toggleButtonNotMainLabel: {\r\n        width: '35px',\r\n    },\r\n    bigAvatar: {\r\n        margin: '10px auto',\r\n        width: 100,\r\n        height: 100,\r\n        border: '3px solid #C1BEC0',\r\n        backgroundColor: 'white',\r\n        ['@media (max-width:600px)']: { // eslint-disable-line no-useless-computed-key\r\n            position: 'relative',\r\n            top: '-25px',\r\n            width: 80,\r\n            height: 80,\r\n            margin: '0 auto',\r\n        }\r\n    },\r\n    img: {\r\n        height: 'auto'\r\n    },\r\n    userName: {\r\n        fontWeight: 'normal',\r\n        textAlign: 'center',\r\n        marginTop: 0,\r\n        color: '#456152',\r\n    },\r\n    listIcon: {\r\n        height: '35px',\r\n        width: '35px',\r\n    },\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport { withRouter } from 'react-router-dom'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport navbarStyle from '../util/navbarStyle'\r\n\r\nconst useStyles = makeStyles(navbarStyle);\r\n\r\nconst MainNavbar = props => {\r\n    const classes = useStyles();\r\n    const [state, setState] = useState({\r\n        left: false,\r\n        users: null,\r\n    });\r\n\r\n    const pages = [\r\n        { label: 'Main', link: '/' },\r\n        { label: 'Merchants', link: '/merchants' }\r\n    ]\r\n\r\n    const toggleDrawer = (side, open) => event => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        setState({ ...state, [side]: open });\r\n    };\r\n\r\n    const sideList = withRouter(({ history }, side) => {\r\n        return (\r\n            <div\r\n                className={classes.list}\r\n                role=\"presentation\"\r\n                onClick={toggleDrawer(side, false)}\r\n                onKeyDown={toggleDrawer(side, false)}\r\n            >\r\n                <List>\r\n                    {pages.map((el, index) => (\r\n                        <ListItem button key={el.label} onClick={() => history.push(el.link)}>\r\n                            <ListItemIcon>{index === 0 ? <HomeIcon /> : <AttachMoneyIcon />}</ListItemIcon>\r\n                            <ListItemText primary={el.label} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.navBar}>\r\n                <Button onClick={toggleDrawer('left', true)} className={classes.toggleButton}><MenuIcon /></Button>\r\n                <Drawer open={state.left} onClose={toggleDrawer('left', false)}>\r\n                    {sideList('left')}\r\n                </Drawer>\r\n            </div>\r\n            <Avatar alt=\"user avatar\" src={props.userImage} classes={{ root: classes.bigAvatar, img: classes.img }} />\r\n            <h2 className={classes.userName}>Welcome {props.userName}</h2>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default MainNavbar","import React from 'react';\r\nimport ArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withRouter } from 'react-router-dom'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport navbarStyle from '../util/navbarStyle'\r\n\r\nconst useStyles = makeStyles(navbarStyle);\r\n\r\nconst OtherNavbar = props => {\r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.navBar}>\r\n                <Button onClick={() => { props.history.push(props.returnLink) }} classes={{ root: classes.toggleButtonNotMain, label: classes.toggleButtonNotMainLabel }}><ArrowLeftIcon classes={{ root: classes.listIcon }} /></Button>\r\n            </div>\r\n            <Avatar alt=\"user avatar\" src={props.userImage} classes={{ root: classes.bigAvatar, img: classes.img }} />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withRouter(OtherNavbar)","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Api } from '../../services/Api'\r\nimport Loader from 'react-loader-spinner'\r\nimport { withRouter } from 'react-router-dom'\r\nimport navbarStyle from '../../util/navbarStyle'\r\nimport MainNavbar from '../../layout/MainNavbar'\r\nimport OtherNavbar from '../../layout/OtherNavbar'\r\n\r\nconst useStyles = makeStyles(navbarStyle);\r\n\r\nconst Navbar = props => {\r\n    const classes = useStyles();\r\n    const [users, setUsers] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchUsers = async () => {\r\n            let response = await Api.users.getUsers()\r\n            setUsers(response)\r\n        }\r\n        fetchUsers()\r\n    }, [])\r\n\r\n    if (users === null) return (\r\n        <div className={classes.navBar}>\r\n            <div style={{ textAlign: 'center', paddingTop: '50px', margin: '0 auto' }}>\r\n                <Loader type=\"Triangle\" color=\"#639E85\" height=\"50\" width=\"50\" />\r\n            </div>\r\n        </div>)\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {window.location.pathname === '/' ? <MainNavbar userImage={users[0].image} userName={users[0].name} /> : <OtherNavbar returnLink='/' userImage={users[0].image} />}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default withRouter(Navbar);","export default {\r\n    menuList: {\r\n        ['@media (min-width:600px)']: { // eslint-disable-line no-useless-computed-key\r\n            display: 'none'\r\n        }\r\n    },\r\n    listItem: {\r\n        borderTop: '1px solid lightgrey',\r\n        borderBottom: '1px solid lightgrey',\r\n        color: '#639E85',\r\n        height: '65px',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        margin: '0 10px',\r\n        paddingRight: 0\r\n    },\r\n    listItemText: {\r\n        fontWeight: \"bold\",\r\n        color: '#639E85',\r\n    },\r\n    listArrow: {\r\n        color: 'lightgrey',\r\n        height: '40px',\r\n        width: '40px',\r\n        position: 'absolute',\r\n        right: 0,\r\n    },\r\n    cardGrid: {\r\n        width: '90%',\r\n        margin: '0 auto',\r\n        ['@media (max-width:600px)']: { // eslint-disable-line no-useless-computed-key\r\n            display: 'none'\r\n        }\r\n    },\r\n    cardPaper: {\r\n        textAlign: 'center',\r\n        padding: '5px',\r\n        margin: '5px'\r\n    },\r\n    listIcon: {\r\n        color: '#639E85',\r\n        ['@media (min-width:600px)']: { // eslint-disable-line no-useless-computed-key\r\n            height: '35px',\r\n            width: '35px'\r\n        }\r\n    },\r\n    userName: {\r\n        fontWeight: 'normal',\r\n        textAlign: 'center',\r\n        marginTop: 0,\r\n        color: '#456152',\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Loader from 'react-loader-spinner'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ArrorRight from '@material-ui/icons/KeyboardArrowRight'\r\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\r\nimport SpaIcon from '@material-ui/icons/Spa';\r\nimport DeveloperBoardIcon from '@material-ui/icons/DeveloperBoard';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport { Api } from '../../services/Api'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { ListItemText } from '@material-ui/core';\r\nimport categoriesStyle from '../../util/categoriesStyle'\r\n\r\nconst useStyles = makeStyles(categoriesStyle);\r\n\r\nconst Categories = ({ history }) => {\r\n    const classes = useStyles();\r\n    const [categories, setCategories] = useState([])\r\n    const [merchants, setMerchants] = useState(0)\r\n\r\n    useEffect(() => {\r\n        fetchMerchants()\r\n        fetchCategories()\r\n        let timer1 = setInterval(fetchMerchants, 10000)\r\n        let timer2 = setInterval(fetchCategories, 10000)\r\n        return () => {\r\n            clearInterval(timer1)\r\n            clearInterval(timer2)\r\n        }\r\n    }, [])\r\n\r\n    const fetchMerchants = async () => {\r\n        console.log(1)\r\n        let response = await Api.merchants.getMerchants()\r\n        setMerchants(response.length)\r\n    }\r\n\r\n    const fetchCategories = async () => {\r\n        console.log(2)\r\n        let response = await Api.categories.getCategories()\r\n        setCategories(response)\r\n    }\r\n\r\n    const chooseIcon = id => {\r\n        switch (id) {\r\n            case 1: return <FastfoodIcon className={classes.listIcon} />;\r\n            case 2: return <SpaIcon className={classes.listIcon} />;\r\n            case 3: return <DeveloperBoardIcon className={classes.listIcon} />;\r\n            default: return <FolderIcon className={classes.listIcon} />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h5 className={classes.userName}>Choose Category For Available Gifts</h5>\r\n            <MenuList classes={{ root: classes.menuList }}>\r\n                {categories.map(el => {\r\n                    return (\r\n                        <MenuItem key={el.id} classes={{ root: classes.listItem }} onClick={() => { history.push('/merchants') }}>\r\n                            <ListItemIcon>\r\n                                {chooseIcon(el.id)}\r\n                            </ListItemIcon>\r\n                            <ListItemText classes={{ primary: classes.listItemText }}>\r\n                                {el.title}\r\n                                <p style={{ color: 'grey', margin: '0', fontWeight: 'normal' }}>{merchants} Gifts Available</p>\r\n                            </ListItemText>\r\n                            <ArrorRight classes={{ root: classes.listArrow }} />\r\n                        </MenuItem>\r\n                    )\r\n                })}\r\n            </MenuList>\r\n\r\n            <Grid container className={classes.cardGrid}>\r\n                {categories.map(el => {\r\n                    return (\r\n                        <Grid item key={el.id} sm={6} md={4}>\r\n                            <Paper className={classes.cardPaper} onClick={() => { history.push('/merchants') }}>\r\n                                {chooseIcon(el.id)}\r\n                                <p className={classes.listItemText}>{el.title}</p>\r\n                                <p style={{ color: 'grey', margin: '0', fontWeight: 'normal' }}>{merchants} Gifts Available</p>\r\n                            </Paper>\r\n                        </Grid>\r\n\r\n                    )\r\n                })}\r\n            </Grid>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withRouter(Categories);","import React from 'react';\r\nimport './styles/App.css';\r\nimport Categories from './components/categories/Categories'\r\n\r\nfunction App() {\r\n  if ('serviceWorker' in navigator) {\r\n    window.addEventListener('load', function () {\r\n      navigator.serviceWorker.register('/service-worker.js');\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Categories />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { fade } from '@material-ui/core/styles/colorManipulator';\r\nexport default {\r\n    card: {\r\n        maxWidth: 345,\r\n        width: 250,\r\n        ['@media (max-width:600px)']: { // eslint-disable-line no-useless-computed-key\r\n            marginBottom: '32px'\r\n        }\r\n    },\r\n    media: {\r\n        height: 140,\r\n        backgroundSize: 'contain',\r\n        marginTop: '5px',\r\n    },\r\n    cardContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'space-evenly',\r\n        flexWrap: 'wrap',\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: '5px',\r\n        backgroundColor: fade('rgb(255, 255, 255)', 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade('rgb(255, 255, 255)', 0.25),\r\n        },\r\n        marginBottom: '16px',\r\n        textAlign: 'center',\r\n    },\r\n    searchIcon: {\r\n        color: '#95DBC8',\r\n    },\r\n    recordIcon: {\r\n        color: '#9c1816',\r\n        height: '25px'\r\n    },\r\n    inputRoot: {\r\n        border: '1px solid #95DBC8',\r\n        borderRadius: '5px',\r\n        padding: '5px',\r\n        color: 'inherit',\r\n        width: 250,\r\n        maxWidth: '85%',\r\n    },\r\n    inputInput: {\r\n        padding: '8px 8x 8x 16px',\r\n    },\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport RecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport merchantsStyle from '../util/merchantsStyle'\r\n\r\nconst useStyles = makeStyles(merchantsStyle);\r\n\r\nconst SpeechRecognition = window.webkitSpeechRecognition || window.SpeechRecognition;\r\nlet recognition = null\r\nif (SpeechRecognition !== undefined) recognition = new SpeechRecognition();\r\n\r\nconst SearchInput = props => {\r\n    const [recording, setRecording] = useState(false)\r\n    const [search, setSearch] = useState('')\r\n    const classes = useStyles();\r\n\r\n    useEffect(props => {\r\n        if (recording && SpeechRecognition !== undefined) {\r\n            recognition.start()\r\n            recognition.onresult = (event) => {\r\n                const speechToText = event.results[0][0].transcript;\r\n                setSearch(speechToText)\r\n            }\r\n        } else return\r\n    }, [recording])\r\n\r\n    useEffect(() => {\r\n        props.getValue(search)\r\n    }, [search])\r\n\r\n    return (\r\n        <div className={classes.search}>\r\n            <InputBase\r\n                placeholder=\"Search…\"\r\n                id=\"input-with-icon-adornment\"\r\n                startAdornment={\r\n                    <InputAdornment position=\"start\">\r\n                        <IconButton aria-label=\"Mic\">\r\n                            <SearchIcon className={classes.searchIcon} />\r\n                        </IconButton>\r\n                    </InputAdornment>}\r\n                endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        {SpeechRecognition !== undefined && <IconButton aria-label=\"Mic\" onClick={() => setRecording(!recording)}>\r\n                            {recording ? <RecordIcon className={classes.recordIcon} /> : <MicIcon className={classes.searchIcon} />}\r\n                        </IconButton>}\r\n                    </InputAdornment>}\r\n                classes={{\r\n                    root: classes.inputRoot,\r\n                    input: classes.inputInput,\r\n                }}\r\n                onChange={e => setSearch(e.target.value)}\r\n                value={search}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchInput","import React, { useState, useEffect } from 'react'\r\nimport { Api } from '../../services/Api'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport merchantsStyle from '../../util/merchantsStyle'\r\nimport SeachInput from '../../layout/SearchInput'\r\nconst useStyles = makeStyles(merchantsStyle);\r\n\r\nconst Merchants = props => {\r\n    const classes = useStyles();\r\n    const [allMerchants, setAllMerchants] = useState([])\r\n    const [merchants, setMerchants] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetchAllMerchants()\r\n        let timer = setInterval(fetchAllMerchants, 10000)\r\n        return () => {\r\n            clearInterval(timer)\r\n        }\r\n    }, [])\r\n\r\n    const fetchAllMerchants = async () => {\r\n        console.log('entered merc2')\r\n        let response = await Api.merchants.getMerchants()\r\n        setAllMerchants(response.filter(item => item.categoryId === 1))\r\n        setMerchants(response.filter(item => item.categoryId === 1))\r\n    }\r\n\r\n    const getSearchValue = (value) => {\r\n        setMerchants(allMerchants.filter(item => item.name.toLowerCase().includes(value.toLowerCase())))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <SeachInput getValue={getSearchValue} />\r\n            <div className={classes.cardContainer}>\r\n                {merchants.map(el => {\r\n                    return (\r\n                        <Card key={el.id} className={classes.card}>\r\n                            <CardActionArea>\r\n                                <CardMedia\r\n                                    className={classes.media}\r\n                                    image={el.image}\r\n                                    title={el.name}\r\n                                />\r\n                                <CardContent>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        {el.name}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        {el.description === '' ? 'no description available' : el.description}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </CardActionArea>\r\n                        </Card>\r\n                    )\r\n                })}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Merchants;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      // const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n      const swUrl = `${process.env.PUBLIC_URL}/sw.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Navbar from './components/navbar/Navbar'\r\nimport { Route, BrowserRouter } from \"react-router-dom\";\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport Merchants from './components/merchants/Merchants'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { AnimatedSwitch } from 'react-router-transition';\r\n\r\nconst supportsHistory = \"pushState\" in window.history;\r\n\r\nfunction mapStyles(styles) {\r\n    return {\r\n        opacity: styles.opacity,\r\n        transform: `translateX(${styles.offset}%)`,\r\n    };\r\n}\r\n\r\nconst bounceTransition = {\r\n    atEnter: {\r\n        opacity: 1,\r\n        offset: 100,\r\n    },\r\n    atLeave: {\r\n        opacity: 0,\r\n        offset: -100,\r\n    },\r\n    atActive: {\r\n        opacity: 1,\r\n        offset: 0,\r\n    },\r\n};\r\n\r\n\r\nReactDOM.render(\r\n    <BrowserRouter forceRefresh={!supportsHistory}>\r\n        <Navbar />\r\n        <AnimatedSwitch\r\n            atEnter={bounceTransition.atEnter}\r\n            atLeave={bounceTransition.atLeave}\r\n            atActive={bounceTransition.atActive}\r\n            mapStyles={mapStyles}\r\n            className=\"route-wrapper\"\r\n        >\r\n            <Route exact path=\"/\" component={App} />\r\n            <Route path=\"/merchants\" component={Merchants} />\r\n        </AnimatedSwitch>\r\n    </BrowserRouter>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\nserviceWorker.register();\r\n"],"sourceRoot":""}