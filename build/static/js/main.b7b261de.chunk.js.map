{"version":3,"sources":["services/Api/base.js","services/Api/categories.js","services/Api/merchants.js","services/Api/users.js","services/Api/index.js","util/navbarStyle.js","layout/MainNavbar.js","layout/OtherNavbar.js","components/navbar/Navbar.js","util/categoriesStyle.js","components/categories/Categories.js","App.js","util/merchantsStyle.js","layout/SearchInput.js","components/merchants/Merchants.js","serviceWorker.js","index.js"],"names":["BaseApiService","Object","classCallCheck","this","baseURL","server","axios","create","headers","Content-Type","method","_ref","url","params","request","then","response","catch","handleError","error","console","log","CategoriesApiService","_BaseApiService","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","MerchantsApiService","UsersApiService","Api","ApiService","categories","merchants","users","navbarStyle","navBar","height","backgroundColor","list","width","toggleButton","paddingTop","paddingBottom","paddingLeft","color","toggleButtonNotMain","toggleButtonNotMainLabel","bigAvatar","defineProperty","margin","border","position","top","img","userName","fontWeight","textAlign","marginTop","listIcon","useStyles","makeStyles","MainNavbar","props","classes","_useState","useState","left","_useState2","slicedToArray","state","setState","pages","label","link","toggleDrawer","side","open","event","type","objectSpread","sideList","withRouter","history","react_default","a","createElement","className","role","onClick","onKeyDown","List","map","el","index","ListItem","button","push","ListItemIcon","Home_default","AttachMoney_default","ListItemText","primary","Fragment","Button","Menu_default","Drawer","onClose","Avatar","alt","src","userImage","root","returnLink","KeyboardArrowLeft_default","setUsers","useEffect","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","getUsers","undefined","sent","status","data","abrupt","stop","fetchUsers","style","react_loader_spinner_default","window","location","pathname","layout_MainNavbar","image","name","layout_OtherNavbar","categoriesStyle","menuList","display","listItem","borderTop","borderBottom","fontSize","paddingRight","listItemText","listArrow","right","cardGrid","cardPaper","padding","setCategories","_useState3","_useState4","setMerchants","fetchMerchants","fetchCategories","timer1","setInterval","timer2","clearInterval","_ref2","getMerchants","length","_ref3","_callee2","_context2","getCategories","chooseIcon","id","Fastfood_default","Spa_default","DeveloperBoard_default","Folder_default","MenuList","MenuItem","title","KeyboardArrowRight_default","Grid","container","item","sm","md","Paper","App","navigator","addEventListener","serviceWorker","register","categories_Categories","merchantsStyle","card","maxWidth","marginBottom","media","backgroundSize","cardContainer","justifyContent","flexWrap","search","borderRadius","fade","&:hover","searchIcon","recordIcon","inputRoot","inputInput","SpeechRecognition","webkitSpeechRecognition","recognition","SearchInput","recording","setRecording","setSearch","start","onresult","speechToText","results","transcript","getValue","InputBase","placeholder","startAdornment","InputAdornment","IconButton","aria-label","Search_default","endAdornment","FiberManualRecord_default","Mic_default","input","onChange","e","target","Merchants","allMerchants","setAllMerchants","fetchAllMerchants","timer","filter","categoryId","layout_SearchInput","toLowerCase","includes","Card","CardActionArea","CardMedia","CardContent","Typography","gutterBottom","variant","component","description","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","supportsHistory","bounceTransition","atEnter","opacity","offset","atLeave","atActive","ReactDOM","render","react_router_dom","forceRefresh","navbar_Navbar","es","mapStyles","styles","transform","concat","react_router","exact","path","document","getElementById","URL","process","href","origin","fetch","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"0TA6BeA,aA1BX,SAAAA,IAAeC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GACXG,KAAKC,QAAU,wEACfD,KAAKE,OAASC,IAAMC,OAAO,CACvBH,QAASD,KAAKC,QACdI,QAAS,CACLC,eAAgB,6EAKK,IAAvBC,EAAuBC,EAAvBD,OAAQE,EAAeD,EAAfC,IAAKC,EAAUF,EAAVE,OACnB,OAAOV,KAAKE,OACPS,QAAQ,CACLJ,SACAE,MACAC,WAEHE,KAAK,SAAAC,GAAQ,OAAIA,IACjBC,MAAMd,KAAKe,iDAGRC,GACRC,QAAQC,IAAIF,YCvBPG,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAArB,OAAAC,EAAA,EAAAD,CAAAE,KAAAmB,GAAArB,OAAAuB,EAAA,EAAAvB,CAAAE,KAAAF,OAAAwB,EAAA,EAAAxB,CAAAqB,GAAAI,MAAAvB,KAAAwB,YAAA,OAAA1B,OAAA2B,EAAA,EAAA3B,CAAAqB,EAAAC,GAAAtB,OAAA4B,EAAA,EAAA5B,CAAAqB,EAAA,EAAAQ,IAAA,gBAAAC,MAAA,WAGQ,OAAO5B,KAAKW,QAAQ,CAChBJ,OAAQ,MACRE,IAAK,oBALjBU,EAAA,CAA0CtB,GCA7BgC,EAAb,SAAAT,GAAA,SAAAS,IAAA,OAAA/B,OAAAC,EAAA,EAAAD,CAAAE,KAAA6B,GAAA/B,OAAAuB,EAAA,EAAAvB,CAAAE,KAAAF,OAAAwB,EAAA,EAAAxB,CAAA+B,GAAAN,MAAAvB,KAAAwB,YAAA,OAAA1B,OAAA2B,EAAA,EAAA3B,CAAA+B,EAAAT,GAAAtB,OAAA4B,EAAA,EAAA5B,CAAA+B,EAAA,EAAAF,IAAA,eAAAC,MAAA,WAGQ,OAAO5B,KAAKW,QAAQ,CAChBJ,OAAQ,MACRE,IAAK,kBALjBoB,EAAA,CAAyChC,GCA5BiC,EAAb,SAAAV,GAAA,SAAAU,IAAA,OAAAhC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8B,GAAAhC,OAAAuB,EAAA,EAAAvB,CAAAE,KAAAF,OAAAwB,EAAA,EAAAxB,CAAAgC,GAAAP,MAAAvB,KAAAwB,YAAA,OAAA1B,OAAA2B,EAAA,EAAA3B,CAAAgC,EAAAV,GAAAtB,OAAA4B,EAAA,EAAA5B,CAAAgC,EAAA,EAAAH,IAAA,WAAAC,MAAA,WAGQ,OAAO5B,KAAKW,QAAQ,CAChBJ,OAAQ,MACRE,IAAK,eALjBqB,EAAA,CAAqCjC,GCUxBkC,EAAM,IAPf,SAAAC,IAAelC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgC,GACXhC,KAAKiC,WAAa,IAAId,EACtBnB,KAAKkC,UAAY,IAAIL,EACrB7B,KAAKmC,MAAQ,IAAIL,oCCRVM,EAAA,CACXC,OAAQ,CACJC,OAAQ,OACRC,gBAAiB,WAErBC,KAAM,CACFC,MAAO,KAEXC,aAAc,CACVC,WAAY,MACZC,cAAe,MACfC,YAAa,MACbP,OAAQ,OACRQ,MAAO,SAEXC,oBAAqB,CACjBJ,WAAY,MACZC,cAAe,MACfC,YAAa,MACbP,OAAQ,OACRQ,MAAO,SAGXE,yBAA0B,CACtBP,MAAO,QAEXQ,UAAUnD,OAAAoD,EAAA,EAAApD,CAAA,CACNqD,OAAQ,YACRV,MAAO,IACPH,OAAQ,IACRc,OAAQ,oBACRb,gBAAiB,SAChB,2BAA6B,CAC1Bc,SAAU,WACVC,IAAK,QACLb,MAAO,GACPH,OAAQ,GACRa,OAAQ,WAGhBI,IAAK,CACDjB,OAAQ,QAEZkB,SAAU,CACNC,WAAY,SACZC,UAAW,SACXC,UAAW,EACXb,MAAO,WAEXc,SAAU,CACNtB,OAAQ,OACRG,MAAO,mICpCToB,EAAYC,YAAW1B,GAuDd2B,EArDI,SAAAC,GACf,IAAMC,EAAUJ,IADQK,EAEEC,mBAAS,CAC/BC,MAAM,EACNjC,MAAO,OAJakC,EAAAvE,OAAAwE,EAAA,EAAAxE,CAAAoE,EAAA,GAEjBK,EAFiBF,EAAA,GAEVG,EAFUH,EAAA,GAOlBI,EAAQ,CACV,CAAEC,MAAO,OAAQC,KAAM,KACvB,CAAED,MAAO,YAAaC,KAAM,eAG1BC,EAAe,SAACC,EAAMC,GAAP,OAAgB,SAAAC,IACd,YAAfA,EAAMC,MAAqC,QAAdD,EAAMpD,KAA+B,UAAdoD,EAAMpD,MAG9D6C,EAAS1E,OAAAmF,EAAA,EAAAnF,CAAA,GAAKyE,EAANzE,OAAAoD,EAAA,EAAApD,CAAA,GAAc+E,EAAOC,OAG3BI,EAAWC,YAAW,SAAA3E,EAAcqE,GAAS,IAApBO,EAAoB5E,EAApB4E,QAC3B,OACIC,EAAAC,EAAAC,cAAA,OACIC,UAAWvB,EAAQzB,KACnBiD,KAAK,eACLC,QAASd,EAAaC,GAAM,GAC5Bc,UAAWf,EAAaC,GAAM,IAE9BQ,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACKnB,EAAMoB,IAAI,SAACC,EAAIC,GAAL,OACPV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAUC,QAAM,EAACtE,IAAKmE,EAAGpB,MAAOgB,QAAS,kBAAMN,EAAQc,KAAKJ,EAAGnB,QAC3DU,EAAAC,EAAAC,cAACY,EAAA,EAAD,KAAyB,IAAVJ,EAAcV,EAAAC,EAAAC,cAACa,EAAAd,EAAD,MAAeD,EAAAC,EAAAC,cAACc,EAAAf,EAAD,OAC5CD,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAcC,QAAST,EAAGpB,eAQlD,OACIW,EAAAC,EAAAC,cAACF,EAAAC,EAAMkB,SAAP,KACInB,EAAAC,EAAAC,cAAA,OAAKC,UAAWvB,EAAQ5B,QACpBgD,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAQf,QAASd,EAAa,QAAQ,GAAOY,UAAWvB,EAAQvB,cAAc2C,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,OAC9ED,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAQ7B,KAAMP,EAAMH,KAAMwC,QAAShC,EAAa,QAAQ,IACnDM,EAAS,UAGlBG,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAQC,IAAI,cAAcC,IAAK/C,EAAMgD,UAAW/C,QAAS,CAAEgD,KAAMhD,EAAQhB,UAAWM,IAAKU,EAAQV,OACjG8B,EAAAC,EAAAC,cAAA,MAAIC,UAAWvB,EAAQT,UAAvB,WAA0CQ,EAAMR,6BCzDtDK,EAAYC,YAAW1B,GAcd+C,cAZK,SAAAnB,GAChB,IAAMC,EAAUJ,IAChB,OACIwB,EAAAC,EAAAC,cAACF,EAAAC,EAAMkB,SAAP,KACInB,EAAAC,EAAAC,cAAA,OAAKC,UAAWvB,EAAQ5B,QACpBgD,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAQf,QAAS,WAAQ1B,EAAMoB,QAAQc,KAAKlC,EAAMkD,aAAejD,QAAS,CAAEgD,KAAMhD,EAAQlB,oBAAqB2B,MAAOT,EAAQjB,2BAA4BqC,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CAAerB,QAAS,CAAEgD,KAAMhD,EAAQL,cAEtMyB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAQC,IAAI,cAAcC,IAAK/C,EAAMgD,UAAW/C,QAAS,CAAEgD,KAAMhD,EAAQhB,UAAWM,IAAKU,EAAQV,UCRvGM,EAAYC,YAAW1B,GA8Bd+C,cA5BA,SAAAnB,GACX,IAAMC,EAAUJ,IADIK,EAEMC,mBAAS,MAFfE,EAAAvE,OAAAwE,EAAA,EAAAxE,CAAAoE,EAAA,GAEb/B,EAFakC,EAAA,GAEN+C,EAFM/C,EAAA,GAcpB,OAVAgD,oBAAU,YACU,eAAA7G,EAAAV,OAAAwH,EAAA,EAAAxH,CAAAyH,EAAAjC,EAAAkC,KAAG,SAAAC,IAAA,IAAA5G,EAAA,OAAA0G,EAAAjC,EAAAoC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACM9F,EAAII,MAAM2F,WADhB,eAEEC,KADblH,EADW8G,EAAAK,OAEmC,MAApBnH,EAASoH,OAFxB,CAAAN,EAAAE,KAAA,QAGXT,EAASvG,EAASqH,MAHPP,EAAAE,KAAA,sBAAAF,EAAAQ,OAAA,kCAAAR,EAAAS,SAAAX,MAAH,yBAAAjH,EAAAe,MAAAvB,KAAAwB,YAAA,EAMhB6G,IACD,IAEW,OAAVlG,EACAkD,EAAAC,EAAAC,cAAA,OAAKC,UAAWvB,EAAQ5B,QACpBgD,EAAAC,EAAAC,cAAA,OAAK+C,MAAO,CAAE5E,UAAW,SAAUf,WAAY,OAAQQ,OAAQ,WAC3DkC,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAQN,KAAK,WAAWlC,MAAM,UAAUR,OAAO,KAAKG,MAAM,SAKlE4C,EAAAC,EAAAC,cAACF,EAAAC,EAAMkB,SAAP,KACkC,MAA7BgC,OAAOC,SAASC,SAAmBrD,EAAAC,EAAAC,cAACoD,EAAD,CAAY3B,UAAW7E,EAAM,GAAGyG,MAAOpF,SAAUrB,EAAM,GAAG0G,OAAWxD,EAAAC,EAAAC,cAACuD,EAAD,CAAa5B,WAAW,IAAIF,UAAW7E,EAAM,GAAGyG,6KClCtJG,GAAA,CACXC,SAASlJ,OAAAoD,EAAA,EAAApD,CAAA,GACJ,2BAA6B,CAC1BmJ,QAAS,SAGjBC,SAAU,CACNC,UAAW,sBACXC,aAAc,sBACdtG,MAAO,UACPR,OAAQ,OACRmB,WAAY,OACZ4F,SAAU,OACVlG,OAAQ,SACRmG,aAAc,GAElBC,aAAc,CACV9F,WAAY,OACZX,MAAO,WAEX0G,UAAW,CACP1G,MAAO,YACPR,OAAQ,OACRG,MAAO,OACPY,SAAU,WACVoG,MAAO,GAEXC,SAAS5J,OAAAoD,EAAA,EAAApD,CAAA,CACL2C,MAAO,MACPU,OAAQ,UACP,2BAA6B,CAC1B8F,QAAS,SAGjBU,UAAW,CACPjG,UAAW,SACXkG,QAAS,MACTzG,OAAQ,OAEZS,SAAS9D,OAAAoD,EAAA,EAAApD,CAAA,CACLgD,MAAO,WACN,2BAA6B,CAC1BR,OAAQ,OACRG,MAAO,SAGfe,SAAU,CACNC,WAAY,SACZC,UAAW,SACXC,UAAW,EACXb,MAAO,YChCTe,GAAYC,YAAWiF,IA+Ed5D,eA7EI,SAAA3E,GAAiB,IAAd4E,EAAc5E,EAAd4E,QACZnB,EAAUJ,KADgBK,EAEIC,mBAAS,IAFbE,EAAAvE,OAAAwE,EAAA,EAAAxE,CAAAoE,EAAA,GAEzBjC,EAFyBoC,EAAA,GAEbwF,EAFaxF,EAAA,GAAAyF,EAGE3F,mBAAS,GAHX4F,EAAAjK,OAAAwE,EAAA,EAAAxE,CAAAgK,EAAA,GAGzB5H,EAHyB6H,EAAA,GAGdC,EAHcD,EAAA,GAKhC1C,oBAAU,WACN4C,IACAC,IACA,IAAIC,EAASC,YAAYH,EAAgB,KACrCI,EAASD,YAAYF,EAAiB,KAC1C,OAAO,WACHI,cAAcH,GACdG,cAAcD,KAEnB,IAEH,IAAMJ,EAAc,eAAAM,EAAAzK,OAAAwH,EAAA,EAAAxH,CAAAyH,EAAAjC,EAAAkC,KAAG,SAAAC,IAAA,IAAA5G,EAAA,OAAA0G,EAAAjC,EAAAoC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACE9F,EAAIG,UAAUsI,eADhB,eAEFzC,KADblH,EADe8G,EAAAK,OAE+B,MAApBnH,EAASoH,OAFpB,CAAAN,EAAAE,KAAA,QAGfmC,EAAanJ,EAASqH,KAAKuC,QAHZ9C,EAAAE,KAAA,sBAAAF,EAAAQ,OAAA,kCAAAR,EAAAS,SAAAX,MAAH,yBAAA8C,EAAAhJ,MAAAvB,KAAAwB,YAAA,GAOd0I,EAAe,eAAAQ,EAAA5K,OAAAwH,EAAA,EAAAxH,CAAAyH,EAAAjC,EAAAkC,KAAG,SAAAmD,IAAA,IAAA9J,EAAA,OAAA0G,EAAAjC,EAAAoC,KAAA,SAAAkD,GAAA,cAAAA,EAAAhD,KAAAgD,EAAA/C,MAAA,cAAA+C,EAAA/C,KAAA,EACC9F,EAAIE,WAAW4I,gBADhB,eAEH9C,KADblH,EADgB+J,EAAA5C,OAE8B,MAApBnH,EAASoH,OAFnB,CAAA2C,EAAA/C,KAAA,QAGhBgC,EAAchJ,EAASqH,MAHP0C,EAAA/C,KAAA,sBAAA+C,EAAAzC,OAAA,kCAAAyC,EAAAxC,SAAAuC,MAAH,yBAAAD,EAAAnJ,MAAAvB,KAAAwB,YAAA,GAOfsJ,EAAa,SAAAC,GACf,OAAQA,GACJ,KAAK,EAAG,OAAO1F,EAAAC,EAAAC,cAACyF,GAAA1F,EAAD,CAAcE,UAAWvB,EAAQL,WAChD,KAAK,EAAG,OAAOyB,EAAAC,EAAAC,cAAC0F,GAAA3F,EAAD,CAASE,UAAWvB,EAAQL,WAC3C,KAAK,EAAG,OAAOyB,EAAAC,EAAAC,cAAC2F,GAAA5F,EAAD,CAAoBE,UAAWvB,EAAQL,WACtD,QAAS,OAAOyB,EAAAC,EAAAC,cAAC4F,GAAA7F,EAAD,CAAYE,UAAWvB,EAAQL,aAIvD,OACIyB,EAAAC,EAAAC,cAACF,EAAAC,EAAMkB,SAAP,KACInB,EAAAC,EAAAC,cAAA,MAAIC,UAAWvB,EAAQT,UAAvB,uCACA6B,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAUnH,QAAS,CAAEgD,KAAMhD,EAAQ+E,WAC9B/G,EAAW4D,IAAI,SAAAC,GACZ,OACIT,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAU1J,IAAKmE,EAAGiF,GAAI9G,QAAS,CAAEgD,KAAMhD,EAAQiF,UAAYxD,QAAS,WAAQN,EAAQc,KAAK,gBACrFb,EAAAC,EAAAC,cAACY,EAAA,EAAD,KACK2E,EAAWhF,EAAGiF,KAEnB1F,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAcrC,QAAS,CAAEsC,QAAStC,EAAQsF,eACrCzD,EAAGwF,MACJjG,EAAAC,EAAAC,cAAA,KAAG+C,MAAO,CAAExF,MAAO,OAAQK,OAAQ,IAAKM,WAAY,WAAavB,EAAjE,qBAEJmD,EAAAC,EAAAC,cAACgG,GAAAjG,EAAD,CAAYrB,QAAS,CAAEgD,KAAMhD,EAAQuF,iBAMrDnE,EAAAC,EAAAC,cAACiG,GAAA,EAAD,CAAMC,WAAS,EAACjG,UAAWvB,EAAQyF,UAC9BzH,EAAW4D,IAAI,SAAAC,GACZ,OACIT,EAAAC,EAAAC,cAACiG,GAAA,EAAD,CAAME,MAAI,EAAC/J,IAAKmE,EAAGiF,GAAIY,GAAI,EAAGC,GAAI,GAC9BvG,EAAAC,EAAAC,cAACsG,GAAA,EAAD,CAAOrG,UAAWvB,EAAQ0F,UAAWjE,QAAS,WAAQN,EAAQc,KAAK,gBAC9D4E,EAAWhF,EAAGiF,IACf1F,EAAAC,EAAAC,cAAA,KAAGC,UAAWvB,EAAQsF,cAAezD,EAAGwF,OACxCjG,EAAAC,EAAAC,cAAA,KAAG+C,MAAO,CAAExF,MAAO,OAAQK,OAAQ,IAAKM,WAAY,WAAavB,EAAjE,4BCtEjB4J,OAZf,WAOE,MANI,kBAAmBC,WACrBvD,OAAOwD,iBAAiB,OAAQ,WAC9BD,UAAUE,cAAcC,SAAS,wBAKnC7G,EAAAC,EAAAC,cAAC4G,GAAD,2ECXWC,GAAA,CACXC,KAAKvM,OAAAoD,EAAA,EAAApD,CAAA,CACDwM,SAAU,IACV7J,MAAO,KACN,2BAA6B,CAC1B8J,aAAc,SAGtBC,MAAO,CACHlK,OAAQ,IACRmK,eAAgB,UAChB9I,UAAW,OAEf+I,cAAe,CACXzD,QAAS,OACT0D,eAAgB,eAChBC,SAAU,QAEdC,OAAQ,CACJxJ,SAAU,WACVyJ,aAAc,MACdvK,gBAAiBwK,gBAAK,qBAAsB,KAC5CC,UAAW,CACPzK,gBAAiBwK,gBAAK,qBAAsB,MAEhDR,aAAc,OACd7I,UAAW,UAEfuJ,WAAY,CACRnK,MAAO,WAEXoK,WAAY,CACRpK,MAAO,UACPR,OAAQ,QAEZ6K,UAAW,CACP/J,OAAQ,oBACR0J,aAAc,MACdlD,QAAS,MACT9G,MAAO,UACPL,MAAO,IACP6J,SAAU,OAEdc,WAAY,CACRxD,QAAS,6GCnCX/F,GAAYC,aAAWsI,IAEvBiB,GAAoB7E,OAAO8E,yBAA2B9E,OAAO6E,kBAC/DE,GAAc,UACQxF,IAAtBsF,KAAiCE,GAAc,IAAIF,IAEvD,IA+CeG,GA/CK,SAAAxJ,GAAS,IAAAE,EACSC,oBAAS,GADlBE,EAAAvE,OAAAwE,EAAA,EAAAxE,CAAAoE,EAAA,GAClBuJ,EADkBpJ,EAAA,GACPqJ,EADOrJ,EAAA,GAAAyF,EAEG3F,mBAAS,IAFZ4F,EAAAjK,OAAAwE,EAAA,EAAAxE,CAAAgK,EAAA,GAElB+C,EAFkB9C,EAAA,GAEV4D,EAFU5D,EAAA,GAGnB9F,EAAUJ,KAgBhB,OAdAwD,oBAAU,SAAArD,GACFyJ,QAAmC1F,IAAtBsF,KACbE,GAAYK,QACZL,GAAYM,SAAW,SAAC9I,GACpB,IAAM+I,EAAe/I,EAAMgJ,QAAQ,GAAG,GAAGC,WACzCL,EAAUG,MAGnB,CAACL,IAEJpG,oBAAU,WACNrD,EAAMiK,SAASpB,IAChB,CAACA,IAGAxH,EAAAC,EAAAC,cAAA,OAAKC,UAAWvB,EAAQ4I,QACpBxH,EAAAC,EAAAC,cAAC2I,GAAA,EAAD,CACIC,YAAY,eACZpD,GAAG,4BACHqD,eACI/I,EAAAC,EAAAC,cAAC8I,GAAA,EAAD,CAAgBhL,SAAS,SACrBgC,EAAAC,EAAAC,cAAC+I,GAAA,EAAD,CAAYC,aAAW,OACnBlJ,EAAAC,EAAAC,cAACiJ,GAAAlJ,EAAD,CAAYE,UAAWvB,EAAQgJ,eAG3CwB,aACIpJ,EAAAC,EAAAC,cAAC8I,GAAA,EAAD,CAAgBhL,SAAS,YACE0E,IAAtBsF,IAAmChI,EAAAC,EAAAC,cAAC+I,GAAA,EAAD,CAAYC,aAAW,MAAM7I,QAAS,kBAAMgI,GAAcD,KACzFA,EAAYpI,EAAAC,EAAAC,cAACmJ,GAAApJ,EAAD,CAAYE,UAAWvB,EAAQiJ,aAAiB7H,EAAAC,EAAAC,cAACoJ,GAAArJ,EAAD,CAASE,UAAWvB,EAAQgJ,eAGrGhJ,QAAS,CACLgD,KAAMhD,EAAQkJ,UACdyB,MAAO3K,EAAQmJ,YAEnByB,SAAU,SAAAC,GAAC,OAAInB,EAAUmB,EAAEC,OAAOnN,QAClCA,MAAOiL,MC/CjBhJ,GAAYC,aAAWsI,IA0Dd4C,GAxDG,SAAAhL,GACd,IAAMC,EAAUJ,KADOK,EAEiBC,mBAAS,IAF1BE,EAAAvE,OAAAwE,EAAA,EAAAxE,CAAAoE,EAAA,GAEhB+K,EAFgB5K,EAAA,GAEF6K,EAFE7K,EAAA,GAAAyF,EAGW3F,mBAAS,IAHpB4F,EAAAjK,OAAAwE,EAAA,EAAAxE,CAAAgK,EAAA,GAGhB5H,EAHgB6H,EAAA,GAGLC,EAHKD,EAAA,GAKvB1C,oBAAU,WACN8H,IACA,IAAIC,EAAQhF,YAAY+E,EAAmB,KAC3C,OAAO,WACH7E,cAAc8E,KAEnB,IAEH,IAAMD,EAAiB,eAAA3O,EAAAV,OAAAwH,EAAA,EAAAxH,CAAAyH,EAAAjC,EAAAkC,KAAG,SAAAC,IAAA,IAAA5G,EAAA,OAAA0G,EAAAjC,EAAAoC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACD9F,EAAIG,UAAUsI,eADb,eAELzC,KADblH,EADkB8G,EAAAK,OAE4B,MAApBnH,EAASoH,OAFjB,CAAAN,EAAAE,KAAA,QAGlBqH,EAAgBrO,EAASqH,KAAKmH,OAAO,SAAA3D,GAAI,OAAwB,IAApBA,EAAK4D,cAClDtF,EAAanJ,EAASqH,KAAKmH,OAAO,SAAA3D,GAAI,OAAwB,IAApBA,EAAK4D,cAJ7B3H,EAAAE,KAAA,sBAAAF,EAAAQ,OAAA,kCAAAR,EAAAS,SAAAX,MAAH,yBAAAjH,EAAAe,MAAAvB,KAAAwB,YAAA,GAYvB,OACI6D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACgK,GAAD,CAAYtB,SANG,SAACrM,GACpBoI,EAAaiF,EAAaI,OAAO,SAAA3D,GAAI,OAAIA,EAAK7C,KAAK2G,cAAcC,SAAS7N,EAAM4N,qBAM5EnK,EAAAC,EAAAC,cAAA,OAAKC,UAAWvB,EAAQyI,eACnBxK,EAAU2D,IAAI,SAAAC,GACX,OACIT,EAAAC,EAAAC,cAACmK,GAAA,EAAD,CAAM/N,IAAKmE,EAAGiF,GAAIvF,UAAWvB,EAAQoI,MACjChH,EAAAC,EAAAC,cAACoK,GAAA,EAAD,KACItK,EAAAC,EAAAC,cAACqK,GAAA,EAAD,CACIpK,UAAWvB,EAAQuI,MACnB5D,MAAO9C,EAAG8C,MACV0C,MAAOxF,EAAG+C,OAEdxD,EAAAC,EAAAC,cAACsK,GAAA,EAAD,KACIxK,EAAAC,EAAAC,cAACuK,GAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC3CnK,EAAG+C,MAERxD,EAAAC,EAAAC,cAACuK,GAAA,EAAD,CAAYE,QAAQ,QAAQlN,MAAM,gBAAgBmN,UAAU,KACpC,KAAnBnK,EAAGoK,YAAqB,2BAA6BpK,EAAGoK,qBC3C3FC,GAAcC,QACW,cAA7B5H,OAAOC,SAAS4H,UAEa,UAA7B7H,OAAOC,SAAS4H,UAEhB7H,OAAOC,SAAS4H,SAASC,MACvB,2DAsCJ,SAASC,GAAgBC,EAAOC,GAC9B1E,UAAUE,cACPC,SAASsE,GACT5P,KAAK,SAAA8P,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBrM,QACfwH,UAAUE,cAAc8E,YAI1B9P,QAAQC,IACN,iHAKEuP,GAAUA,EAAOO,UACnBP,EAAOO,SAASN,KAMlBzP,QAAQC,IAAI,sCAGRuP,GAAUA,EAAOQ,WACnBR,EAAOQ,UAAUP,UAO5B5P,MAAM,SAAAE,GACLC,QAAQD,MAAM,4CAA6CA,kBCtF3DkQ,GAAkB,cAAe1I,OAAOpD,QAS9C,IAAM+L,GAAmB,CACrBC,QAAS,CACLC,QAAS,EACTC,OAAQ,KAEZC,QAAS,CACLF,QAAS,EACTC,QAAS,KAEbE,SAAU,CACNH,QAAS,EACTC,OAAQ,IAKhBG,IAASC,OACLrM,EAAAC,EAAAC,cAACoM,EAAA,EAAD,CAAeC,cAAeV,IAC1B7L,EAAAC,EAAAC,cAACsM,EAAD,MACAxM,EAAAC,EAAAC,cAACuM,GAAA,EAAD,CACIV,QAASD,GAAiBC,QAC1BG,QAASJ,GAAiBI,QAC1BC,SAAUL,GAAiBK,SAC3BO,UA9BZ,SAAmBC,GACf,MAAO,CACHX,QAASW,EAAOX,QAChBY,UAAS,cAAAC,OAAgBF,EAAOV,OAAvB,QA4BL9L,UAAU,iBAEVH,EAAAC,EAAAC,cAAC4M,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIpC,UAAWnE,KACjCzG,EAAAC,EAAAC,cAAC4M,EAAA,EAAD,CAAOE,KAAK,aAAapC,UAAWjB,OAG1CsD,SAASC,eAAe,SD3BvB,SAAkB9B,GACvB,GAA6C,kBAAmB1E,UAAW,CAGzE,GADkB,IAAIyG,IAAIC,GAAwBjK,OAAOC,SAASiK,MACpDC,SAAWnK,OAAOC,SAASkK,OAIvC,OAGFnK,OAAOwD,iBAAiB,OAAQ,WAC9B,IAAMwE,EAAK,GAAA0B,OAAMO,GAAN,sBAEPtC,IAgEV,SAAiCK,EAAOC,GAEtCmC,MAAMpC,GACH5P,KAAK,SAAAC,GAEJ,IAAMgS,EAAchS,EAASR,QAAQyS,IAAI,gBAEnB,MAApBjS,EAASoH,QACO,MAAf4K,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5ChH,UAAUE,cAAc+G,MAAMpS,KAAK,SAAA8P,GACjCA,EAAauC,aAAarS,KAAK,WAC7B4H,OAAOC,SAASyK,aAKpB3C,GAAgBC,EAAOC,KAG1B3P,MAAM,WACLG,QAAQC,IACN,mEArFAiS,CAAwB3C,EAAOC,GAI/B1E,UAAUE,cAAc+G,MAAMpS,KAAK,WACjCK,QAAQC,IACN,gHAMJqP,GAAgBC,EAAOC,MCI/BxE","file":"static/js/main.b7b261de.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nclass BaseApiService {\r\n    constructor() {\r\n        this.baseURL = 'https://my-json-server.typicode.com/lazicmladen/PWATrainingFakeServer';\r\n        this.server = axios.create({\r\n            baseURL: this.baseURL,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n    }\r\n\r\n    request({ method, url, params }) {\r\n        return this.server\r\n            .request({\r\n                method,\r\n                url,\r\n                params\r\n            })\r\n            .then(response => response)\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    handleError(error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport default BaseApiService;\r\n","import BaseApiService from './base';\r\n\r\nexport class CategoriesApiService extends BaseApiService {\r\n    \r\n    getCategories() {\r\n        return this.request({\r\n            method: 'get',\r\n            url: '/categories'\r\n        })\r\n    }\r\n\r\n}","import BaseApiService from './base';\r\n\r\nexport class MerchantsApiService extends BaseApiService {\r\n\r\n    getMerchants() {\r\n        return this.request({\r\n            method: 'get',\r\n            url: '/mercants'\r\n        })\r\n    }\r\n\r\n}","import BaseApiService from './base';\r\n\r\nexport class UsersApiService extends BaseApiService {\r\n\r\n    getUsers() {\r\n        return this.request({\r\n            method: 'get',\r\n            url: '/users'\r\n        })\r\n    }\r\n\r\n}","import { CategoriesApiService } from './categories';\r\nimport { MerchantsApiService } from './merchants';\r\nimport { UsersApiService } from './users';\r\n\r\nclass ApiService {\r\n    constructor() {\r\n        this.categories = new CategoriesApiService();\r\n        this.merchants = new MerchantsApiService();\r\n        this.users = new UsersApiService();\r\n    }\r\n}\r\n\r\nexport const Api = new ApiService();","export default {\r\n    navBar: {\r\n        height: '35px',\r\n        backgroundColor: '#95DBC8'\r\n    },\r\n    list: {\r\n        width: 250,\r\n    },\r\n    toggleButton: {\r\n        paddingTop: '0px',\r\n        paddingBottom: '0px',\r\n        paddingLeft: '0px',\r\n        height: '35px',\r\n        color: 'white',\r\n    },\r\n    toggleButtonNotMain: {\r\n        paddingTop: '0px',\r\n        paddingBottom: '0px',\r\n        paddingLeft: '0px',\r\n        height: '35px',\r\n        color: 'white',\r\n        // justifyContent: 'unset'\r\n    },\r\n    toggleButtonNotMainLabel: {\r\n        width: '35px',\r\n    },\r\n    bigAvatar: {\r\n        margin: '10px auto',\r\n        width: 100,\r\n        height: 100,\r\n        border: '3px solid #C1BEC0',\r\n        backgroundColor: 'white',\r\n        ['@media (max-width:600px)']: { // eslint-disable-line no-useless-computed-key\r\n            position: 'relative',\r\n            top: '-25px',\r\n            width: 80,\r\n            height: 80,\r\n            margin: '0 auto',\r\n        }\r\n    },\r\n    img: {\r\n        height: 'auto'\r\n    },\r\n    userName: {\r\n        fontWeight: 'normal',\r\n        textAlign: 'center',\r\n        marginTop: 0,\r\n        color: '#456152',\r\n    },\r\n    listIcon: {\r\n        height: '35px',\r\n        width: '35px',\r\n    },\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport { withRouter } from 'react-router-dom'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport navbarStyle from '../util/navbarStyle'\r\n\r\nconst useStyles = makeStyles(navbarStyle);\r\n\r\nconst MainNavbar = props => {\r\n    const classes = useStyles();\r\n    const [state, setState] = useState({\r\n        left: false,\r\n        users: null,\r\n    });\r\n\r\n    const pages = [\r\n        { label: 'Main', link: '/' },\r\n        { label: 'Merchants', link: '/merchants' }\r\n    ]\r\n\r\n    const toggleDrawer = (side, open) => event => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        setState({ ...state, [side]: open });\r\n    };\r\n\r\n    const sideList = withRouter(({ history }, side) => {\r\n        return (\r\n            <div\r\n                className={classes.list}\r\n                role=\"presentation\"\r\n                onClick={toggleDrawer(side, false)}\r\n                onKeyDown={toggleDrawer(side, false)}\r\n            >\r\n                <List>\r\n                    {pages.map((el, index) => (\r\n                        <ListItem button key={el.label} onClick={() => history.push(el.link)}>\r\n                            <ListItemIcon>{index === 0 ? <HomeIcon /> : <AttachMoneyIcon />}</ListItemIcon>\r\n                            <ListItemText primary={el.label} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.navBar}>\r\n                <Button onClick={toggleDrawer('left', true)} className={classes.toggleButton}><MenuIcon /></Button>\r\n                <Drawer open={state.left} onClose={toggleDrawer('left', false)}>\r\n                    {sideList('left')}\r\n                </Drawer>\r\n            </div>\r\n            <Avatar alt=\"user avatar\" src={props.userImage} classes={{ root: classes.bigAvatar, img: classes.img }} />\r\n            <h2 className={classes.userName}>Welcome {props.userName}</h2>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default MainNavbar","import React from 'react';\r\nimport ArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withRouter } from 'react-router-dom'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport navbarStyle from '../util/navbarStyle'\r\n\r\nconst useStyles = makeStyles(navbarStyle);\r\n\r\nconst OtherNavbar = props => {\r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.navBar}>\r\n                <Button onClick={() => { props.history.push(props.returnLink) }} classes={{ root: classes.toggleButtonNotMain, label: classes.toggleButtonNotMainLabel }}><ArrowLeftIcon classes={{ root: classes.listIcon }} /></Button>\r\n            </div>\r\n            <Avatar alt=\"user avatar\" src={props.userImage} classes={{ root: classes.bigAvatar, img: classes.img }} />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withRouter(OtherNavbar)","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Api } from '../../services/Api'\r\nimport Loader from 'react-loader-spinner'\r\nimport { withRouter } from 'react-router-dom'\r\nimport navbarStyle from '../../util/navbarStyle'\r\nimport MainNavbar from '../../layout/MainNavbar'\r\nimport OtherNavbar from '../../layout/OtherNavbar'\r\n\r\nconst useStyles = makeStyles(navbarStyle);\r\n\r\nconst Navbar = props => {\r\n    const classes = useStyles();\r\n    const [users, setUsers] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchUsers = async () => {\r\n            let response = await Api.users.getUsers()\r\n            if (response !== undefined && response.status === 200) {\r\n                setUsers(response.data)\r\n            } else return\r\n        }\r\n        fetchUsers()\r\n    }, [])\r\n\r\n    if (users === null) return (\r\n        <div className={classes.navBar}>\r\n            <div style={{ textAlign: 'center', paddingTop: '50px', margin: '0 auto' }}>\r\n                <Loader type=\"Triangle\" color=\"#639E85\" height=\"50\" width=\"50\" />\r\n            </div>\r\n        </div>)\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {window.location.pathname === '/' ? <MainNavbar userImage={users[0].image} userName={users[0].name} /> : <OtherNavbar returnLink='/' userImage={users[0].image} />}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default withRouter(Navbar);","export default {\r\n    menuList: {\r\n        ['@media (min-width:600px)']: { // eslint-disable-line no-useless-computed-key\r\n            display: 'none'\r\n        }\r\n    },\r\n    listItem: {\r\n        borderTop: '1px solid lightgrey',\r\n        borderBottom: '1px solid lightgrey',\r\n        color: '#639E85',\r\n        height: '65px',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        margin: '0 10px',\r\n        paddingRight: 0\r\n    },\r\n    listItemText: {\r\n        fontWeight: \"bold\",\r\n        color: '#639E85',\r\n    },\r\n    listArrow: {\r\n        color: 'lightgrey',\r\n        height: '40px',\r\n        width: '40px',\r\n        position: 'absolute',\r\n        right: 0,\r\n    },\r\n    cardGrid: {\r\n        width: '90%',\r\n        margin: '0 auto',\r\n        ['@media (max-width:600px)']: { // eslint-disable-line no-useless-computed-key\r\n            display: 'none'\r\n        }\r\n    },\r\n    cardPaper: {\r\n        textAlign: 'center',\r\n        padding: '5px',\r\n        margin: '5px'\r\n    },\r\n    listIcon: {\r\n        color: '#639E85',\r\n        ['@media (min-width:600px)']: { // eslint-disable-line no-useless-computed-key\r\n            height: '35px',\r\n            width: '35px'\r\n        }\r\n    },\r\n    userName: {\r\n        fontWeight: 'normal',\r\n        textAlign: 'center',\r\n        marginTop: 0,\r\n        color: '#456152',\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Loader from 'react-loader-spinner'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ArrorRight from '@material-ui/icons/KeyboardArrowRight'\r\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\r\nimport SpaIcon from '@material-ui/icons/Spa';\r\nimport DeveloperBoardIcon from '@material-ui/icons/DeveloperBoard';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport { Api } from '../../services/Api'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { ListItemText } from '@material-ui/core';\r\nimport categoriesStyle from '../../util/categoriesStyle'\r\n\r\nconst useStyles = makeStyles(categoriesStyle);\r\n\r\nconst Categories = ({ history }) => {\r\n    const classes = useStyles();\r\n    const [categories, setCategories] = useState([])\r\n    const [merchants, setMerchants] = useState(0)\r\n\r\n    useEffect(() => {\r\n        fetchMerchants()\r\n        fetchCategories()\r\n        let timer1 = setInterval(fetchMerchants, 10000)\r\n        let timer2 = setInterval(fetchCategories, 10000)\r\n        return () => {\r\n            clearInterval(timer1)\r\n            clearInterval(timer2)\r\n        }\r\n    }, [])\r\n\r\n    const fetchMerchants = async () => {\r\n        let response = await Api.merchants.getMerchants()\r\n        if (response !== undefined && response.status === 200) {\r\n            setMerchants(response.data.length)\r\n        } else return\r\n    }\r\n\r\n    const fetchCategories = async () => {\r\n        let response = await Api.categories.getCategories()\r\n        if (response !== undefined && response.status === 200) {\r\n            setCategories(response.data)\r\n        } else return\r\n    }\r\n\r\n    const chooseIcon = id => {\r\n        switch (id) {\r\n            case 1: return <FastfoodIcon className={classes.listIcon} />;\r\n            case 2: return <SpaIcon className={classes.listIcon} />;\r\n            case 3: return <DeveloperBoardIcon className={classes.listIcon} />;\r\n            default: return <FolderIcon className={classes.listIcon} />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h5 className={classes.userName}>Choose Category For Available Gifts</h5>\r\n            <MenuList classes={{ root: classes.menuList }}>\r\n                {categories.map(el => {\r\n                    return (\r\n                        <MenuItem key={el.id} classes={{ root: classes.listItem }} onClick={() => { history.push('/merchants') }}>\r\n                            <ListItemIcon>\r\n                                {chooseIcon(el.id)}\r\n                            </ListItemIcon>\r\n                            <ListItemText classes={{ primary: classes.listItemText }}>\r\n                                {el.title}\r\n                                <p style={{ color: 'grey', margin: '0', fontWeight: 'normal' }}>{merchants} Gifts Available</p>\r\n                            </ListItemText>\r\n                            <ArrorRight classes={{ root: classes.listArrow }} />\r\n                        </MenuItem>\r\n                    )\r\n                })}\r\n            </MenuList>\r\n\r\n            <Grid container className={classes.cardGrid}>\r\n                {categories.map(el => {\r\n                    return (\r\n                        <Grid item key={el.id} sm={6} md={4}>\r\n                            <Paper className={classes.cardPaper} onClick={() => { history.push('/merchants') }}>\r\n                                {chooseIcon(el.id)}\r\n                                <p className={classes.listItemText}>{el.title}</p>\r\n                                <p style={{ color: 'grey', margin: '0', fontWeight: 'normal' }}>{merchants} Gifts Available</p>\r\n                            </Paper>\r\n                        </Grid>\r\n\r\n                    )\r\n                })}\r\n            </Grid>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withRouter(Categories);","import React from 'react';\r\nimport './styles/App.css';\r\nimport Categories from './components/categories/Categories'\r\n\r\nfunction App() {\r\n  if ('serviceWorker' in navigator) {\r\n    window.addEventListener('load', function () {\r\n      navigator.serviceWorker.register('/service-worker.js');\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Categories />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { fade } from '@material-ui/core/styles/colorManipulator';\r\nexport default {\r\n    card: {\r\n        maxWidth: 345,\r\n        width: 250,\r\n        ['@media (max-width:600px)']: { // eslint-disable-line no-useless-computed-key\r\n            marginBottom: '32px'\r\n        }\r\n    },\r\n    media: {\r\n        height: 140,\r\n        backgroundSize: 'contain',\r\n        marginTop: '5px',\r\n    },\r\n    cardContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'space-evenly',\r\n        flexWrap: 'wrap',\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: '5px',\r\n        backgroundColor: fade('rgb(255, 255, 255)', 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade('rgb(255, 255, 255)', 0.25),\r\n        },\r\n        marginBottom: '16px',\r\n        textAlign: 'center',\r\n    },\r\n    searchIcon: {\r\n        color: '#95DBC8',\r\n    },\r\n    recordIcon: {\r\n        color: '#9c1816',\r\n        height: '25px'\r\n    },\r\n    inputRoot: {\r\n        border: '1px solid #95DBC8',\r\n        borderRadius: '5px',\r\n        padding: '5px',\r\n        color: 'inherit',\r\n        width: 250,\r\n        maxWidth: '85%',\r\n    },\r\n    inputInput: {\r\n        padding: '8px 8x 8x 16px',\r\n    },\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport RecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport merchantsStyle from '../util/merchantsStyle'\r\n\r\nconst useStyles = makeStyles(merchantsStyle);\r\n\r\nconst SpeechRecognition = window.webkitSpeechRecognition || window.SpeechRecognition;\r\nlet recognition = null\r\nif (SpeechRecognition !== undefined) recognition = new SpeechRecognition();\r\n\r\nconst SearchInput = props => {\r\n    const [recording, setRecording] = useState(false)\r\n    const [search, setSearch] = useState('')\r\n    const classes = useStyles();\r\n\r\n    useEffect(props => {\r\n        if (recording && SpeechRecognition !== undefined) {\r\n            recognition.start()\r\n            recognition.onresult = (event) => {\r\n                const speechToText = event.results[0][0].transcript;\r\n                setSearch(speechToText)\r\n            }\r\n        } else return\r\n    }, [recording])\r\n\r\n    useEffect(() => {\r\n        props.getValue(search)\r\n    }, [search])\r\n\r\n    return (\r\n        <div className={classes.search}>\r\n            <InputBase\r\n                placeholder=\"Search…\"\r\n                id=\"input-with-icon-adornment\"\r\n                startAdornment={\r\n                    <InputAdornment position=\"start\">\r\n                        <IconButton aria-label=\"Mic\">\r\n                            <SearchIcon className={classes.searchIcon} />\r\n                        </IconButton>\r\n                    </InputAdornment>}\r\n                endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        {SpeechRecognition !== undefined && <IconButton aria-label=\"Mic\" onClick={() => setRecording(!recording)}>\r\n                            {recording ? <RecordIcon className={classes.recordIcon} /> : <MicIcon className={classes.searchIcon} />}\r\n                        </IconButton>}\r\n                    </InputAdornment>}\r\n                classes={{\r\n                    root: classes.inputRoot,\r\n                    input: classes.inputInput,\r\n                }}\r\n                onChange={e => setSearch(e.target.value)}\r\n                value={search}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchInput","import React, { useState, useEffect } from 'react'\r\nimport { Api } from '../../services/Api'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport merchantsStyle from '../../util/merchantsStyle'\r\nimport SeachInput from '../../layout/SearchInput'\r\nconst useStyles = makeStyles(merchantsStyle);\r\n\r\nconst Merchants = props => {\r\n    const classes = useStyles();\r\n    const [allMerchants, setAllMerchants] = useState([])\r\n    const [merchants, setMerchants] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetchAllMerchants()\r\n        let timer = setInterval(fetchAllMerchants, 10000)\r\n        return () => {\r\n            clearInterval(timer)\r\n        }\r\n    }, [])\r\n\r\n    const fetchAllMerchants = async () => {\r\n        let response = await Api.merchants.getMerchants()\r\n        if (response !== undefined && response.status === 200) {\r\n            setAllMerchants(response.data.filter(item => item.categoryId === 1))\r\n            setMerchants(response.data.filter(item => item.categoryId === 1))\r\n        } else return\r\n    }\r\n\r\n    const getSearchValue = (value) => {\r\n        setMerchants(allMerchants.filter(item => item.name.toLowerCase().includes(value.toLowerCase())))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <SeachInput getValue={getSearchValue} />\r\n            <div className={classes.cardContainer}>\r\n                {merchants.map(el => {\r\n                    return (\r\n                        <Card key={el.id} className={classes.card}>\r\n                            <CardActionArea>\r\n                                <CardMedia\r\n                                    className={classes.media}\r\n                                    image={el.image}\r\n                                    title={el.name}\r\n                                />\r\n                                <CardContent>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        {el.name}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        {el.description === '' ? 'no description available' : el.description}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </CardActionArea>\r\n                        </Card>\r\n                    )\r\n                })}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Merchants;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Navbar from './components/navbar/Navbar'\r\nimport { Route, BrowserRouter } from \"react-router-dom\";\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport Merchants from './components/merchants/Merchants'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { AnimatedSwitch } from 'react-router-transition';\r\n\r\nconst supportsHistory = \"pushState\" in window.history;\r\n\r\nfunction mapStyles(styles) {\r\n    return {\r\n        opacity: styles.opacity,\r\n        transform: `translateX(${styles.offset}%)`,\r\n    };\r\n}\r\n\r\nconst bounceTransition = {\r\n    atEnter: {\r\n        opacity: 1,\r\n        offset: 100,\r\n    },\r\n    atLeave: {\r\n        opacity: 0,\r\n        offset: -100,\r\n    },\r\n    atActive: {\r\n        opacity: 1,\r\n        offset: 0,\r\n    },\r\n};\r\n\r\n\r\nReactDOM.render(\r\n    <BrowserRouter forceRefresh={!supportsHistory}>\r\n        <Navbar />\r\n        <AnimatedSwitch\r\n            atEnter={bounceTransition.atEnter}\r\n            atLeave={bounceTransition.atLeave}\r\n            atActive={bounceTransition.atActive}\r\n            mapStyles={mapStyles}\r\n            className=\"route-wrapper\"\r\n        >\r\n            <Route exact path=\"/\" component={App} />\r\n            <Route path=\"/merchants\" component={Merchants} />\r\n        </AnimatedSwitch>\r\n    </BrowserRouter>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}